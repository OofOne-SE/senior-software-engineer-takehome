// Code generated by go-swagger; DO NOT EDIT.

package weather_assets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"senior-software-engineer-takehome/models"
)

// PostDataWeatherReader is a Reader for the PostDataWeather structure.
type PostDataWeatherReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDataWeatherReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDataWeatherOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPostDataWeatherDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostDataWeatherOK creates a PostDataWeatherOK with default headers values
func NewPostDataWeatherOK() *PostDataWeatherOK {
	return &PostDataWeatherOK{}
}

/*PostDataWeatherOK handles this case with default header values.

Successfully created
*/
type PostDataWeatherOK struct {
}

func (o *PostDataWeatherOK) Error() string {
	return fmt.Sprintf("[POST /data/weather][%d] postDataWeatherOK ", 200)
}

func (o *PostDataWeatherOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDataWeatherDefault creates a PostDataWeatherDefault with default headers values
func NewPostDataWeatherDefault(code int) *PostDataWeatherDefault {
	return &PostDataWeatherDefault{
		_statusCode: code,
	}
}

/*PostDataWeatherDefault handles this case with default header values.

errors:
| code                                    | HTTP Code | error                 |
|-----------------------------------------|-----------|---------------------- |
| data.weather.post.internal_server_error | 500       | Internal server error |

*/
type PostDataWeatherDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the post data weather default response
func (o *PostDataWeatherDefault) Code() int {
	return o._statusCode
}

func (o *PostDataWeatherDefault) Error() string {
	return fmt.Sprintf("[POST /data/weather][%d] PostDataWeather default  %+v", o._statusCode, o.Payload)
}

func (o *PostDataWeatherDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostDataWeatherDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
